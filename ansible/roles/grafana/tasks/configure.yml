---
- name: Ensure grafana configuration directories exist
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: grafana
    mode: 0644
  with_items:
    - "/etc/grafana"
    - "/etc/grafana/datasources"
    - "/etc/grafana/provisioning"
    - "/etc/grafana/provisioning/datasources"
    - "/etc/grafana/provisioning/dashboards"
    - "/etc/grafana/provisioning/notifiers"
    - "/etc/grafana/provisioning/plugins"

- name: Create grafana main configuration file
  template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: root
    group: grafana
    mode: 0644
  no_log: true

# - block:
#   - name: Get stats of the SSL certificate
#     stat:
#       path: grafana.key
#     register: p
#   - name: Create an SSL certificate
#     command: "openssl genrsa -out grafana.key 2048"
#     when: p.stat.exist is defined and p.stat.size > 0

#   - name: Get stats of certificate signing request
#     stat:
#       path: grafana.csr
#     register: p
#   - name: Generate a certificate signing request
#     command: "openssl req -new -key grafana.key -out grafana.csr"
#     when: p.stat.exist is defined and p.stat.size > 0

#   - name: Get stats of crt
#     stat:
#       path: grafana.crt
#     register: p
#   - name: Output the certificate
#     command: "openssl x509 -req -days 365 -in grafana.csr -signkey grafana.key -out grafana.crt"
#     when: p.stat.exist is defined and p.stat.size > 0

- name: Get stats of private key
  stat:
    path: "{{ grafana_server.cert_key }}"
  register: key
- name: Get stats of the SSL certificate
  stat:
    path: "{{ grafana_server.cert_file }}"
  register: crt

- name: Create self-signed certificate.
  command: >
    openssl req -new -nodes -sha512 -x509 -subj "{{ grafana_self_signed_cert_subj }}"
    -addext "subjectAltName = DNS:{{ ansible_fqdn }},IP:{{ ansible_host }}"
    -days 3650 -keyout {{ grafana_server.cert_key }} -out {{ grafana_server.cert_file }}
    -extensions v3_ca
    creates={{ grafana_server.cert_file }}
  when: grafana_create_self_signed_cert # and (! crt.stat.exist or ! key.stat.exist)

- name: Set certificate key file mode and ownership
  file:
    path: "{{ item }}"
    owner: grafana
    group: grafana
    mode: 0400
  with_items:
    - "{{ grafana_server.cert_file }}"
    - "{{ grafana_server.cert_key }}"
  # when: key.stat.mode != 0400 or key.stat.gr_name != 'grafana' or key.stat.pw_name != 'grafana' or crt.stat.mode != 0400 or crt.stat.gr_name != 'grafana' or crt.stat.pw_name != "grafana"

  notify: restart grafana

# - name: Create grafana LDAP configuration file
#   template:
#     src: ldap.toml.j2
#     dest: "{{ grafana_auth.ldap.config_file | default('/etc/grafana/ldap.toml') }}"
#     owner: root
#     group: grafana
#     mode: 0644
#   when:
#     - "'ldap' in grafana_auth"
#     - "'enabled' not in grafana_auth.ldap or grafana_auth.ldap.enabled"
#   no_log: true
#   notify: restart grafana

- name: Create grafana directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "grafana"
    group: "grafana"
  with_items:
    - "{{ grafana_logs_dir }}"
    - "{{ grafana_data_dir }}"
    - "{{ grafana_data_dir }}/dashboards"
    - "{{ grafana_data_dir }}/plugins"

# - block:
#     - name: Create grafana socket directory
#       file:
#         path: "{{ grafana_server.socket | dirname }}"
#         state: directory
#         mode: 0775
#         owner: "grafana"
#         group: "grafana"

#     - name: Ensure grafana socket directory created on startup
#       template:
#         src: tmpfiles.j2
#         dest: /etc/tmpfiles.d/grafana.conf
#         owner: root
#         group: root
#         mode: 0644
#   when:
#     - grafana_server.protocol is defined and grafana_server.protocol == 'socket'
#     - grafana_server.socket | dirname != '/var/run'

- name: Enable grafana to ports lower than port 1024
  capabilities:
    path: /usr/sbin/grafana-server
    capability: CAP_NET_BIND_SERVICE+ep
    state: present
  when:
    - grafana_port | int <= 1024
    - grafana_cap_net_bind_service

- name: Set /etc/grafana/grafana.ini mode and ownership # Позже почему-то возникает ошибка доступа к /etc/grafana/grafana.ini,
# из-за которой не рестартует сервис. Даже при 0664 !!! Поэтому сначала дам максимальные права, а в конце заберу.
  file:
    path: "/etc/grafana/grafana.ini"
    owner: grafana
    group: grafana
    mode: 0777
  
- name: Enable and start Grafana systemd unit
  systemd:
    name: grafana-server
    enabled: true
    state: started
    daemon_reload: true
